generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL")
  directUrl         = env("POSTGRES_URL_NON_POOLING")
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING")
}

model RuleOption {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  ruleId    Int
  rule      Rule     @relation(fields: [ruleId], references: [id])

  @@unique([name, ruleId])
}

model RuleReplacedBy {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  ruleId    Int
  rule      Rule     @relation(fields: [ruleId], references: [id])

  @@unique([name, ruleId])
}

model Rule {
  id                   Int              @id @default(autoincrement())
  createdAt            DateTime         @default(now())
  updatedAt            DateTime         @updatedAt
  name                 String
  ecosystem            String
  category             String?
  deprecated           Boolean
  description          String?
  fixable              String?
  hasSuggestions       Boolean
  requiresTypeChecking Boolean
  type                 String?
  linkRuleDoc          String?
  pluginId             Int
  plugin               Plugin           @relation(fields: [pluginId], references: [id])
  options              RuleOption[]
  replacedBy           RuleReplacedBy[]

  @@unique([name, pluginId])
}

model Config {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  pluginId  Int?
  Plugin    Plugin?  @relation(fields: [pluginId], references: [id])

  @@unique([name, pluginId])
}

model PluginKeyword {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  pluginId  Int
  plugin    Plugin   @relation(fields: [pluginId], references: [id])

  @@unique([name, pluginId])
}

model PluginVersion {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  version     String
  publishedAt DateTime
  pluginId    Int
  plugin      Plugin   @relation(fields: [pluginId], references: [id])

  @@unique([version, pluginId])
}

model Plugin {
  id                   Int             @id @default(autoincrement())
  createdAt            DateTime        @default(now())
  updatedAt            DateTime        @updatedAt
  name                 String          @unique
  ecosystem            String
  linter               String
  description          String?
  packageCreatedAt     DateTime
  packageUpdatedAt     DateTime
  countContributors    Int
  countForks           Int
  countIssues          Int
  countPrs             Int
  countStars           Int
  countWatching        Int
  countWeeklyDownloads Int
  linkHomepage         String?
  linkBugs             String?
  configs              Config[]
  keywords             PluginKeyword[]
  versions             PluginVersion[]
  rules                Rule[]
}
